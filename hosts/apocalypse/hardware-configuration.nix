# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "usbhid" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ "cryptd" "aesni_intel" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "ntfs" "btrfs" "vfat" ];
  boot.loader.grub.extraEntries = 
  ''
menuentry 'UEFI Firmware' $menuentry_id_option 'uefi-firmware' {
 fwsetup
}
  ''; 

  boot.extraModprobeConfig = '' 
  options thinkpad_acpi fan_control=1
  ''; 
  
  boot.initrd.luks.devices = {
    "cryptroot".device = "/dev/disk/by-uuid/d2c3c197-3d75-4da2-a098-207030a91b62";
    "cryptswap".device = "/dev/disk/by-uuid/fd6a5644-a33c-40af-ae48-42db1a5997ac";
  };

  fileSystems."/" =
    { device = "/dev/mapper/cryptroot";
      fsType = "btrfs";
      options = [ "subvol=@root" "compress=zstd" ];
    };

  fileSystems."/btrfs_root" = {
      device = "/dev/mapper/cryptroot";
      fsType = "btrfs";
      options = [ "subvolid=5" "compress=zstd"];
  };


  fileSystems."/snapshots" =
    { device = "/dev/mapper/cryptroot";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" "compress=zstd" ];
    };
  
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6E1A-07F4";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/store2" = 
    { device = "/dev/disk/by-uuid/5368282f-c09d-44cf-9cf2-e69a2d415da6";
      fsType = "btrfs";
      options = [ "noatime" "compress=zstd" "subvol=/"];
    };
  fileSystems."/store1" = 
    { device = "/dev/disk/by-uuid/6A2E2BFF2E2BC2C5";
      fsType = "ntfs-3g" ;
      options = ["rw" "uid=1000" "gid=100"];
    };
  fileSystems."/win_games" = 
    { device = "/dev/disk/by-uuid/6A680789680752ED";
      fsType = "ntfs-3g" ;
      options = ["rw" "uid=1000" "gid=100"];
    };
  fileSystems."/windows" = {
      device = "/dev/disk/by-uuid/7AFA6C84FA6C3E8F";
      fsType = "ntfs-3g";
      options = ["rw" "uid=1000" "gid=100"];
  };

  swapDevices =
    [ { device = "/dev/mapper/cryptswap"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-7bda29607d31.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.virbr0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
